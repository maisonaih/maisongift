import os
import random
import requests
from flask import Flask, request
from database import get_user, update_user_stars, create_user
from helpers import get_random_prize

app = Flask(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN")
if not TOKEN:
    raise Exception("TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
BASE_URL = f"https://api.telegram.org/bot{TOKEN}"

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ Telegram API
def send_message(chat_id, text, keyboard=None):
    url = f"{BASE_URL}/sendMessage"
    payload = {"chat_id": chat_id, "text": text, "parse_mode": "HTML"}
    if keyboard:
        payload["reply_markup"] = keyboard
    requests.post(url, json=payload)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω–≤–æ–π—Å–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
def send_invoice(chat_id):
    url = f"{BASE_URL}/sendInvoice"
    payload = {
        "chat_id": chat_id,
        "title": "–ü–æ–∫—É–ø–∫–∞ –∑–≤—ë–∑–¥",
        "description": "–ö—É–ø–∏ –∑–≤—ë–∑–¥—ã –¥–ª—è –∏–≥—Ä—ã –≤ RandomGift Casino!",
        "payload": "stars_payment",
        "provider_token": os.environ.get("PAYMENT_PROVIDER_TOKEN"),  # –¢–æ–∫–µ–Ω –æ—Ç –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
        "currency": "USD",
        "prices": [{"label": "100 –∑–≤—ë–∑–¥", "amount": 500}],  # –ü—Ä–∏–º–µ—Ä: $5.00 –∑–∞ 100 –∑–≤—ë–∑–¥ (—É–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤ –∫–æ–ø–µ–π–∫–∞—Ö)
        "start_parameter": "buy_stars",
        "photo_url": "https://example.com/star_image.png"  # URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–µ)
    }
    requests.post(url, json=payload)

@app.route("/", methods=["POST"])
def webhook():
    data = request.get_json()
    if "message" in data:
        message = data["message"]
        chat_id = message["chat"]["id"]
        text = message.get("text", "").strip()
        user = get_user(chat_id)
        if not user:
            create_user(chat_id)
            user = get_user(chat_id)

        if text == "/start":
            keyboard = {
                "keyboard": [
                    [{"text": "üé∞ –ö—Ä—É—Ç–∏—Ç—å"}],
                    [{"text": "üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –∑–≤—ë–∑–¥—ã"}, {"text": "üìä –ë–∞–ª–∞–Ω—Å"}]
                ],
                "resize_keyboard": True
            }
            welcome = (
                "üé≤ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>RandomGift Casino</b>!\n\n"
                "–£ —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–∏–≥—Ä–∞—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ Telegram.\n"
                "–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏ <b>üé∞ –ö—Ä—É—Ç–∏—Ç—å</b> (—Å—Ç–∞–≤–∫–∞ 100 –∑–≤—ë–∑–¥) –∏–ª–∏ –ø–æ–ø–æ–ª–Ω–∏ –±–∞–ª–∞–Ω—Å, –Ω–∞–∂–∞–≤ <b>üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –∑–≤—ë–∑–¥—ã</b>."
            )
            send_message(chat_id, welcome, keyboard)

        elif text == "üé∞ –ö—Ä—É—Ç–∏—Ç—å":
            if user["stars"] >= 100:
                prize = get_random_prize()
                update_user_stars(chat_id, -100)  # –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–∞–≤–∫—É
                update_user_stars(chat_id, prize["value"])  # –ù–∞—á–∏—Å–ª—è–µ–º –≤—ã–∏–≥—Ä—ã—à (–º–æ–∂–µ—Ç –±—ã—Ç—å –∫–∞–∫ –≤ –ø–ª—é—Å, —Ç–∞–∫ –∏ –≤ –º–∏–Ω—É—Å)
                response = (
                    f"üéÅ –¢–≤–æ–π —Å–ø–∏–Ω –∑–∞–≤–µ—Ä—à–∏–ª—Å—è!\n"
                    f"–¢—ã –≤—ã–∏–≥—Ä–∞–ª: <b>{prize['name']}</b>\n\n"
                    f"–¢—ã –ø–æ–ª—É—á–∞–µ—à—å: {prize['value']} –∑–≤—ë–∑–¥."
                )
                send_message(chat_id, response)
            else:
                send_message(chat_id, "üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤—ë–∑–¥. –ü–æ–ø–æ–ª–Ω–∏ –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É <b>üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –∑–≤—ë–∑–¥—ã</b>.")

        elif text == "üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –∑–≤—ë–∑–¥—ã":
            send_invoice(chat_id)

        elif text == "üìä –ë–∞–ª–∞–Ω—Å":
            send_message(chat_id, f"üí∞ –¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {user['stars']} –∑–≤—ë–∑–¥.")

        else:
            send_message(chat_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π /start, üé∞ –ö—Ä—É—Ç–∏—Ç—å, üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –∑–≤—ë–∑–¥—ã –∏–ª–∏ üìä –ë–∞–ª–∞–Ω—Å.")
    return {"ok": True}

if __name__ == "__main__":
    app.run()
